type Incident {
  id: ID!
  title: String!
  description: String!
  assignee: User
  status: IncidentStatus
  service: Service!
  organization: Organization!
  events: [Event]
  statusMessage: [StatusMessage]
  actionItems: [ActionItem]
  severity: IncidentSeverity!
  roomURL: String
  incidentDate: DateTime!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum IncidentStatus {
  INVESTIGATING
  IDENTIFIED
  MONITORING
  RESOLVED
}

enum IncidentSeverity {
  CRITICAL
  HIGH
  MEDIUM
  LOW
}

input CreateIncidentInput {
  title: String!
  description: String!
  status: IncidentStatus
  severity: IncidentSeverity
  serviceId: String!
  assigneeId: String
  incidentDate: DateTime!
}

input UpdateIncidentInput {
  id: ID!
  description: String
  status: IncidentStatus
  severity: IncidentSeverity
  assigneeId: String
  serviceId: String
  roomURL: String
}

type Query {
  incidents: [Incident]!
  incident(id: ID!): Incident
  incidentsByServiceId(serviceId: ID!): [Incident]!
  incidentRoomURL(id: ID!): String
  incidentsByAssignedId: [Incident]!
  openIncidents: [Incident]!
}

type Mutation {
  createIncident(createIncidentInput: CreateIncidentInput!): Incident!
  updateIncident(updateIncidentInput: UpdateIncidentInput!): Incident!
  removeIncident(id: ID!): Incident
}
