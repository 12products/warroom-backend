scalar DateTime

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  role: Role!
  organization: Organization
  createdAt: DateTime!
  updatedAt: DateTime!
  actionItems: [ActionItems]
}

type Organization {

}

type ActionItems {
  id:         ID!
  text:       String!
  owner:      User!     
  user:     User!
  incident: Incident
  createdAt:  DateTime!  
  updatedAt:  DateTime! 
}

input CreateUserInput {
  exampleField: Int
}

input UpdateUserInput {
  id: Int!
}

type Query {
  users: [User]!
  user(id: Int!): User
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: Int!): User
}

enum Role {
  ADMIN
  EDITOR
  VIEWER
}
